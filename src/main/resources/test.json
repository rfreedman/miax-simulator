{"inputs":"json_test",
    "query":[
        {
            "map":{
                "language":"javascript",
                "source":"function(value, keyData, arg) {var data = Riak.mapValuesJson(value)[0]; return [ {\"foo\":data.foo, \"baz\":data.baz} ];}"
            }
        },
        {
            "reduce":{
                "language":"javascript",
                "source":"function(values, arg){return values.reduce(function(acc, item){for(baz in item){acc[baz] += item[baz];}return acc;});}"
            }
        }
    ]
}





{"inputs":"json_test",
    "query":[
        {
            "map":{
                "language":"javascript",
                "source":"function(value, keyData, arg) {var data = Riak.mapValuesJson(value)[0]; return [ {\"foo\":data.foo, \"baz\":data.baz} ];}",
                "keep":false
            }
        },
        {
            "reduce":{
                "language":"javascript",
                "source":"function(values, arg) {return values.reduce(function(acc, item) {if(acc[baz]) { acc[baz] += item.baz;} else {acc[baz] = item.baz;}return acc;});}"
            }
        }
    ]
}



{"inputs":"json_test",
    "query":[
        {
            "map":{
                "language":"javascript",
                "source":"function(value, keyData, arg) {var data = Riak.mapValuesJson(value)[0]; return [ {\"foo\":data.foo, \"baz\":data.baz} ];}",
                "keep":false
            }
        },
        {
            "reduce":{
                "language":"javascript",
                "source":"function(values, arg) {return values.reduce(function(acc, item) {if(acc[baz]) { acc[baz] += item.baz;} else {acc[baz] = item.baz;}if(acc['foo']) {acc['foo'] = null;}return acc;});}"
            }
        }
    ]
}

